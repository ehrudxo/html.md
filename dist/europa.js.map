{"version":3,"file":null,"sources":["../node_modules/europa-core/src/transformation.js","../node_modules/europa-core/src/transformer.js","../node_modules/europa-core/src/plugin/plugin.js","../node_modules/europa-core/src/plugin/predefined/anchor.js","../node_modules/europa-core/src/plugin/predefined/block-quote.js","../node_modules/europa-core/src/plugin/predefined/break.js","../node_modules/europa-core/src/plugin/predefined/code.js","../node_modules/europa-core/src/plugin/predefined/strong.js","../node_modules/europa-core/src/plugin/predefined/definition-term.js","../node_modules/europa-core/src/plugin/predefined/details.js","../node_modules/europa-core/src/plugin/predefined/emphasis.js","../node_modules/europa-core/src/plugin/predefined/empty.js","../node_modules/europa-core/src/plugin/predefined/heading.js","../node_modules/europa-core/src/plugin/predefined/horizontal-rule.js","../node_modules/europa-core/src/plugin/predefined/image.js","../node_modules/europa-core/src/utilities.js","../node_modules/europa-core/src/plugin/predefined/list-item.js","../node_modules/europa-core/src/plugin/predefined/ordered-list.js","../node_modules/europa-core/src/plugin/predefined/paragraph.js","../node_modules/europa-core/src/plugin/predefined/preformatted.js","../node_modules/europa-core/src/plugin/preset/preset.js","../node_modules/europa-core/src/plugin/predefined/quote.js","../node_modules/europa-core/src/plugin/predefined/unordered-list.js","../node_modules/europa-core/src/plugin/preset/default.js","../node_modules/europa-core/src/europa.js","../node_modules/europa-core/src/index.js","../node_modules/europa-core/src/service/window-service.js","../src/service/native-window-service.js","../src/index.js"],"sourcesContent":["/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Contains contextual information for a single transformation process.\n *\n * @public\n */\nclass Transformation {\n\n  /**\n   * Creates an instance of {@link Transformation} for the specified <code>transformer</code> and using the\n   * <code>options</code> provided.\n   *\n   * @param {Transformer} transformer - the {@link Transformer} responsible for this transformation\n   * @param {Transformation~Options} options - the options to be used\n   * @public\n   */\n  constructor(transformer, options) {\n    /**\n     * The {@link Transformation} responsible for this {@link Transformation}.\n     *\n     * @public\n     * @type {Transformer}\n     */\n    this.transformer = transformer\n\n    /**\n     * The options for this {@link Transformation}.\n     *\n     * @public\n     * @type {Transformation~Options}\n     */\n    this.options = options\n\n    /**\n     * Indicates whether the buffer is at the start of the current line.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atLeft = true\n\n    /**\n     * Indicates whether any white space should be removed from the start of the next output.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atNoWhiteSpace = true\n\n    /**\n     * Indicates whether the buffer is at the start of a paragraph.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atParagraph = true\n\n\n    /**\n     * The transformation output buffer to which the Markdown will be written.\n     *\n     * @public\n     * @type {string}\n     */\n    this.buffer = ''\n\n    /**\n     * Indicates whether the buffer is currently within a code block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inCodeBlock = false\n\n    /**\n     * Indicates whether the buffer is currently within an ordered list.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inOrderedList = false\n\n    /**\n     * Indicates whether the buffer is currently within a preformatted block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inPreformattedBlock = false\n\n    /**\n     * The last string to be output next to the buffer.\n     *\n     * @public\n     * @type {string}\n     */\n    this.last = null\n\n    /**\n     * The start of the current line.\n     *\n     * @public\n     * @type {string}\n     */\n    this.left = '\\n'\n\n    /**\n     * The depth of nested lists.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listDepth = 0\n\n    /**\n     * The one-based index for the current list item within the current list.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listIndex = 1\n\n    /**\n     * The current stack of plugins.\n     *\n     * @public\n     * @type {Plugin[]}\n     */\n    this.pluginStack = []\n\n    /**\n     * Indicates whether transformation of the children of the current element should be skippped.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.skipChildren = false\n\n    /**\n     * The current document for this {@link Transformation}.\n     *\n     * @private\n     * @type {HTMLDocument}\n     */\n    this._document = transformer.document\n\n    /**\n     * The current element for this {@link Transformation}.\n     *\n     * @private\n     * @type {Element}\n     */\n    this._element = null\n\n    /**\n     * The name of the tag for the current element for this {@link Transformation}.\n     *\n     * @private\n     * @type {string}\n     */\n    this._tagName = null\n\n    /**\n     * The current window for this {@link Transformation}.\n     *\n     * @private\n     * @type {Window}\n     */\n    this._window = transformer.window\n  }\n\n  /**\n   * Appends the last output string to the buffer and then queues the specified <code>string</code> to be output.\n   *\n   * @param {string} string - the string to be appended\n   * @return {Transformation} A reference to this {@link Transformation} for chaining purposes.\n   * @public\n   */\n  append(string) {\n    if (this.last != null) {\n      this.buffer += this.last\n    }\n\n    this.last = string\n\n    return this\n  }\n\n  /**\n   * Appends a paragraph to the output buffer.\n   *\n   * @return {Transformation} A reference to this {@link Transformation} for chaining purposes.\n   * @public\n   */\n  appendParagraph() {\n    if (this.atParagraph) {\n      return this\n    }\n\n    if (!this.atLeft) {\n      this.append(this.left)\n\n      this.atLeft = true\n    }\n\n    this.append(this.left)\n\n    this.atNoWhiteSpace = true\n    this.atParagraph = true\n\n    return this\n  }\n\n  /**\n   * Outputs the specified <code>string</code> to the buffer.\n   *\n   * Optionally, <code>string</code> can be \"cleaned\" before being output. Doing so will replace any certain special\n   * characters as well as some white space.\n   *\n   * @param {string} string - the string to be output\n   * @param {boolean} [clean=false] - <code>true</code> to clean <code>string</code>; otherwise <code>false</code>\n   * @return {Transformation} A reference to this {@link Transformation} for chaining purposes.\n   * @public\n   */\n  output(string, clean) {\n    if (!string) {\n      return this\n    }\n\n    string = string.replace(/\\r\\n/g, '\\n')\n\n    if (clean) {\n      string = string.replace(/\\n([ \\t]*\\n)+/g, '\\n')\n        .replace(/\\n[ \\t]+/g, '\\n')\n        .replace(/[ \\t]+/g, ' ')\n\n      for (const [ key, expression ] of Object.entries(Transformation.REPLACEMENTS)) {\n        string = string.replace(Transformation.REPLACEMENTS_REGEXP[key], expression)\n      }\n    }\n\n    if (!this.inPreformattedBlock) {\n      if (this.atNoWhiteSpace) {\n        string = string.replace(/^[ \\t\\n]+/, '')\n      } else if (/^[ \\t]*\\n/.test(string)) {\n        string = string.replace(/^[ \\t\\n]+/, '\\n')\n      } else {\n        string = string.replace(/^[ \\t]+/, ' ')\n      }\n    }\n\n    if (!string) {\n      return this\n    }\n\n    this.atLeft = /\\n$/.test(string)\n    this.atNoWhiteSpace = /[ \\t\\n]$/.test(string)\n    this.atParagraph = /\\n{2}$/.test(string)\n\n    return this.append(string.replace(/\\n/g, this.left))\n  }\n\n  /**\n   * Replaces the start of the current line with the <code>string</code> provided.\n   *\n   * @param {string} string - the string to replace the start of the current line\n   * @return {Transformation} A reference to this {@link Transformation} for chaining purposes.\n   * @public\n   */\n  replaceLeft(string) {\n    if (!this.atLeft) {\n      this.append(this.left.replace(/[ ]{2,4}$/, string))\n\n      this.atLeft = true\n      this.atNoWhiteSpace = true\n      this.atParagraph = true\n    } else if (this.last) {\n      this.last = this.last.replace(/[ ]{2,4}$/, string)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns the HTML document for this {@link Transformation}.\n   *\n   * This may not be the same document as is associated with the {@link Transformer} as this document may be nested\n   * (e.g. a frame).\n   *\n   * @return {HTMLDocument} The HTML document.\n   * @public\n   */\n  get document() {\n    return this._document\n  }\n\n  /**\n   * Returns the element for this {@link Transformation}.\n   *\n   * @return {Element} The element.\n   * @public\n   */\n  get element() {\n    return this._element\n  }\n\n  /**\n   * Sets the element for this {@link Transformation} to <code>value</code>.\n   *\n   * @param {Element} value - the element to be set\n   * @public\n   */\n  set element(value) {\n    this._element = value\n    this._tagName = value && value.tagName ? value.tagName.toLowerCase() : null\n  }\n\n  /**\n   * Returns the name of the tag for this {@link Transformation}.\n   *\n   * This will be the lower case tag name.\n   *\n   * @return {string} The tag name.\n   * @public\n   */\n  get tagName() {\n    return this._tagName\n  }\n\n  /**\n   * Returns the window for this {@link Transformation}.\n   *\n   * This may not be the same window as is associated with the {@link Transformer} as this window may be nested (e.g. a\n   * frame).\n   *\n   * @return {Window} The window.\n   * @public\n   */\n  get window() {\n    return this._window\n  }\n\n  /**\n   * Sets the window for this {@link Transformation} to <code>value</code>.\n   *\n   * @param {Window} value - the window to be set\n   * @public\n   */\n  set window(value) {\n    this._window = value\n    this._document = value ? value.document : null\n  }\n\n}\n\n/**\n * A map of special characters and their replacements.\n *\n * @public\n * @static\n * @type {Object<string, string>}\n */\nTransformation.REPLACEMENTS = {\n  '\\\\\\\\': '\\\\\\\\',\n  '\\\\[': '\\\\[',\n  '\\\\]': '\\\\]',\n  '>': '\\\\>',\n  '_': '\\\\_',\n  '\\\\*': '\\\\*',\n  '`': '\\\\`',\n  '#': '\\\\#',\n  '([0-9])\\\\.(\\\\s|$)': '$1\\\\.$2',\n  '\\u00a9': '(c)',\n  '\\u00ae': '(r)',\n  '\\u2122': '(tm)',\n  '\\u00a0': ' ',\n  '\\u00b7': '\\\\*',\n  '\\u2002': ' ',\n  '\\u2003': ' ',\n  '\\u2009': ' ',\n  '\\u2018': '\\'',\n  '\\u2019': '\\'',\n  '\\u201c': '\"',\n  '\\u201d': '\"',\n  '\\u2026': '...',\n  '\\u2013': '--',\n  '\\u2014': '---'\n}\n\n/**\n * A map of special characters and the regular expression used to identify them.\n *\n * @public\n * @static\n * @type {Object<string, RegExp>}\n */\nTransformation.REPLACEMENTS_REGEXP = {}\nfor (const key of Object.keys(Transformation.REPLACEMENTS)) {\n  Transformation.REPLACEMENTS_REGEXP[key] = new RegExp(key, 'g')\n}\n\nexport default Transformation\n\n/**\n * The options for {@link Transformation}.\n *\n * @typedef {Object} Transformation~Options\n * @property {boolean} [absolute=false] - <code>true</code> if absolute URLs should be used for anchors/images;\n * otherwise <code>false</code>.\n * @property {string} [baseUri] - the base URI for the window\n * @property {boolean} [inline=false] - <code>true</code> if anchor/image URLs are to be inserted inline; otherwise\n * <code>false</code>.\n */\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport Transformation from './transformation'\n\n/**\n * Transforms an HTML string or DOM element into Markdown.\n *\n * @public\n */\nclass Transformer {\n\n  /**\n   * Creates an instance of {@link Transformer} using the specified <code>window</code> and <code>plugins</code>.\n   *\n   * @param {Window} window - the <code>Window</code> to be used\n   * @param {Map<string, Plugin>} plugins - the plugins to be used\n   * @public\n   */\n  constructor(window, plugins) {\n    /**\n     * The <code>Window</code> for this {@link Transformer}.\n     *\n     * @public\n     * @type {Window}\n     */\n    this.window = window\n\n    /**\n     * The <code>HTMLDocument</code> for this {@link Transformer}.\n     *\n     * @public\n     * @type {HTMLDocument}\n     */\n    this.document = window.document\n\n    /**\n     * The plugins for this {@link Transformer}.\n     *\n     * @private\n     * @type {Map<string, Plugin>}\n     */\n    this._plugins = plugins\n  }\n\n  /**\n   * Transforms the specified <code>html</code> into Markdown using the <code>options</code> provided.\n   *\n   * <code>html</code> can either be an HTML string or a DOM element whose HTML contents are to be transformed into\n   * Markdown.\n   *\n   * @param {Element|string} html - the HTML (or element whose inner HTML) to be transformed into Markdown\n   * @param {Transformation~Options} options - the options to be used\n   * @return {string} The transformed Markdown.\n   * @public\n   */\n  transform(html, options) {\n    if (!html) {\n      return ''\n    }\n\n    let root\n    if (typeof html === 'string') {\n      root = this._document.createElement('div')\n      root.innerHTML = html\n    } else {\n      root = html\n    }\n\n    const transformation = new Transformation(this, options)\n\n    for (const plugin of this._plugins.values()) {\n      plugin.beforeAll(transformation)\n    }\n\n    this.transformElement(root, transformation)\n\n    for (const plugin of this._plugins.values()) {\n      plugin.afterAll(transformation)\n    }\n\n    return transformation.append('').buffer.trim()\n  }\n\n  /**\n   * Transforms the specified <code>element</code> and it's children into Markdown using the <code>transformation</code>\n   * provided.\n   *\n   * Nothing happens if <code>element</code> is <code>null</code> or is invisible (simplified detection used).\n   *\n   * @param {Element} element - the element to be transformed into Markdown as well as it's children\n   * @param {Transformation} transformation - the current {@link Transformation}\n   * @return {void}\n   * @public\n   */\n  transformElement(element, transformation) {\n    if (!(element && this._isVisible(element))) {\n      return\n    }\n\n    if (element.nodeType === this.window.Node.ELEMENT_NODE) {\n      transformation.element = element\n\n      const context = new Map()\n      const plugin = this._plugins.get(transformation.tagName)\n      if (plugin) {\n        transformation.pluginStack.push(plugin)\n\n        plugin.before(transformation, context)\n        plugin.transform(transformation, context)\n      }\n\n      if (!transformation.skipChildren) {\n        for (const child of Array.from(element.childNodes)) {\n          this.transformElement(child, transformation)\n        }\n      }\n\n      if (plugin) {\n        plugin.after(transformation, context)\n\n        transformation.pluginStack.pop()\n      }\n    } else if (element.nodeType === this.window.Node.TEXT_NODE) {\n      const value = element.nodeValue || ''\n\n      if (transformation.inPreformattedBlock) {\n        transformation.output(value)\n      } else if (transformation.inCodeBlock) {\n        transformation.output(value.replace(/`/g, '\\\\`'))\n      } else {\n        transformation.output(value, true)\n      }\n    }\n  }\n\n  /**\n   * Checks whether the specified <code>element</code> is currently visible.\n   *\n   * This is not a very sophisticated check and could easily be mistaken, but it should catch a lot of the most simple\n   * cases.\n   *\n   * @param {Element} element - the element whose visibility is to be checked\n   * @return {boolean} <code>true</code> if <code>element</code> is visible; otherwise <code>false</code>.\n   * @private\n   */\n  _isVisible(element) {\n    const style = this.window.getComputedStyle(element)\n\n    return style.getPropertyValue('display') !== 'none' && style.getPropertyValue('visibility') !== 'hidden'\n  }\n\n}\n\nexport default Transformer\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-empty-function: \"off\", no-unused-vars: \"off\" */\n\n/**\n * A plugin that can tap into multiple parts in the transformation process.\n *\n * @public\n */\nclass Plugin {\n\n  /**\n   * Called after {@link Plugin#transform} <b>and</b> only once all children elements have been transformed as well,\n   * provided they weren't skipped, and intended for tidying up after the transformation.\n   *\n   * <code>context</code> can be used to receive any state for a single element transformation from\n   * {@link Plugin#before} and {@link Plugin#transform}.\n   *\n   * @param {Transformation} transformation - the current {@link Transformation}\n   * @param {Map<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   */\n  after(transformation, context) {}\n\n  /**\n   * Called before any elements are transformed and intended to setup this {@link Plugin} initially.\n   *\n   * @param {Transformation} transformation - the current {@link Transformation}.\n   * @return {void}\n   * @public\n   */\n  afterAll(transformation) {}\n\n  /**\n   * Called immediately before {@link Plugin#transform} and intended for preparing this {@link Plugin} for\n   * transformation.\n   *\n   * <code>context</code> can be used to pass any state for a single element transformation to {@link Plugin#transform}\n   * and then to {@link Plugin#after}.\n   *\n   * @param {Transformation} transformation - the current {@link Transformation}\n   * @param {Map<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   */\n  before(transformation, context) {}\n\n  /**\n   * Called after all elements have been transformed and intended to completing any steps for this {@link Plugin}.\n   *\n   * @param {Transformation} transformation - the current {@link Transformation}\n   * @return {void}\n   * @public\n   */\n  beforeAll(transformation) {}\n\n  /**\n   * Transforms the current element within the specified <code>transformation</code> which can be used to provide\n   * control over the transformation.\n   *\n   * <code>context</code> can be used to pass any state for a single element transformation from {@link Plugin#before}\n   * to {@link Plugin#after}.\n   *\n   * @param {Transformation} transformation - the current {@link Transformation}\n   * @param {Map<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   */\n  transform(transformation, context) {}\n\n}\n\nexport default Plugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which extracts the URL from an anchor. Anchors without an <code>href</code> are treated as plain\n * text.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the anchor will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>href</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL (and any <code>title</code> on the anchor) will be\n * inserted immediately after the anchor contents (e.g. <code>[foo](/bar)</code>). Otherwise, all unique URL and title\n * combinations will be indexed (e.g. <code>[foo][anchor0]</code>) and the references will be output at the very end.\n *\n * @public\n * @extends {Plugin}\n */\nclass AnchorPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    if (context.has('value')) {\n      transformation.output(`]${context.get('value')}`)\n    }\n  }\n\n  /**\n   * @override\n   */\n  afterAll(transformation) {\n    if (!this._anchors.length) {\n      return\n    }\n\n    transformation.append('\\n\\n')\n\n    for (let i = 0; i < this._anchors.length; i++) {\n      transformation.append(`[anchor${i}]: ${this._anchors[i]}\\n`)\n    }\n  }\n\n  /**\n   * @override\n   */\n  beforeAll(transformation) {\n    /**\n     * The anchor values (which will contain the HREF and any title) mapped to their index.\n     *\n     * This is only used when the <code>inline</code> option is enabled.\n     *\n     * @private\n     * @type {Map<string, number>}\n     */\n    this._anchorMap = new Map()\n\n    /**\n     * The indexed anchor values.\n     *\n     * This is only used when the <code>inline</code> option is enabled.\n     *\n     * @private\n     * @type {string[]}\n     */\n    this._anchors = []\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const { element, options } = transformation\n    const href = options.absolute ? element.href : element.getAttribute('href')\n    if (!href) {\n      return\n    }\n\n    const title = element.getAttribute('title')\n    const value = title ? `${href} \"${title}\"` : href\n\n    if (options.inline) {\n      context.set('value', `(${value})`)\n    } else {\n      let index = this._anchorMap.get(value)\n      if (index == null) {\n        index = this._anchors.push(value) - 1\n\n        this._anchorMap.set(value, index)\n      }\n\n      context.set('value', `[anchor${index}]`)\n    }\n\n    transformation.output('[')\n\n    transformation.atNoWhiteSpace = true\n  }\n\n}\n\nexport default AnchorPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs the contents in a block quote.\n *\n * @public\n * @extends {Plugin}\n */\nclass BlockQuotePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.atLeft = false\n    transformation.atParagraph = false\n    transformation.left = context.get('previousLeft')\n\n    transformation.appendParagraph()\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousLeft', transformation.left)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const value = '> '\n\n    transformation.left += value\n\n    if (transformation.atParagraph) {\n      transformation.append(value)\n    } else {\n      transformation.appendParagraph()\n    }\n  }\n\n}\n\nexport default BlockQuotePlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs an inline line break.\n *\n * @public\n * @extends {Plugin}\n */\nclass BreakPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.append(`  ${transformation.left}`)\n\n    transformation.atLeft = true\n    transformation.atNoWhiteSpace = true\n  }\n\n}\n\nexport default BreakPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs the contents in a code block.\n *\n * @public\n * @extends {Plugin}\n */\nclass CodePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    if (!context.get('skipped')) {\n      transformation.inCodeBlock = context.get('previousInCodeBlock')\n\n      transformation.output('`')\n    }\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousInCodeBlock', transformation.inCodeBlock)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    if (transformation.inPreformattedBlock) {\n      context.set('skipped', true)\n    } else {\n      transformation.output('`')\n\n      transformation.inCodeBlock = true\n    }\n  }\n\n}\n\nexport default CodePlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs as strong text.\n *\n * @public\n * @extends {Plugin}\n */\nclass StrongPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.output('**')\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.output('**')\n\n    transformation.atNoWhiteSpace = true\n  }\n\n}\n\nexport default StrongPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport StrongPlugin from './strong'\n\n/**\n * A {@link Plugin} which outputs a definition term as strong text.\n *\n * @public\n * @extends {StrongPlugin}\n */\nclass DefinitionTermPlugin extends StrongPlugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.appendParagraph()\n\n    super.transform(transformation, context)\n  }\n\n}\n\nexport default DefinitionTermPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs a details section.\n *\n * If the details has an <code>open</code> attribute then all of its children are transformed. Otherwise, only the\n * nested <code>summary</code>, if any, will be transformed.\n *\n * @public\n * @extends {Plugin}\n */\nclass DetailsPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.skipChildren = context.get('previousSkipChildren')\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousSkipChildren', transformation.skipChildren)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const { element } = transformation\n\n    transformation.appendParagraph()\n\n    if (!element.hasAttribute('open')) {\n      transformation.skipChildren = true\n\n      const summary = element.querySelector('summary')\n      transformation.transformer.transformElement(summary, transformation)\n    }\n  }\n\n}\n\nexport default DetailsPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs as emphasised text.\n *\n * @public\n * @extends {Plugin}\n */\nclass EmphasisPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.output('_')\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.output('_')\n\n    transformation.atNoWhiteSpace = true\n  }\n\n}\n\nexport default EmphasisPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which simply ensures that all children elements are not transformed.\n *\n * @public\n * @extends {Plugin}\n */\nclass EmptyPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.skipChildren = context.get('previousSkipChildren')\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousSkipChildren', transformation.skipChildren)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.skipChildren = true\n  }\n\n}\n\nexport default EmptyPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs a heading of various levels.\n *\n * @public\n * @extends {Plugin}\n */\nclass HeadingPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const level = parseInt(transformation.tagName.match(/([1-6])$/)[1], 10)\n\n    transformation.appendParagraph()\n\n    let heading = ''\n    for (let i = 0; i < level; i++) {\n      heading += '#'\n    }\n\n    transformation.output(`${heading} `)\n  }\n\n}\n\nexport default HeadingPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs a horizontal rule.\n *\n * @public\n * @extends {Plugin}\n */\nclass HorizontalRulePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation\n      .appendParagraph()\n      .output('---')\n      .appendParagraph()\n  }\n\n}\n\nexport default HorizontalRulePlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which extracts the URL from an image.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the image will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>src</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL will be inserted immediately after the <code>alt</code> on\n * the image (e.g. <code>![foo](/bar.png)</code>). Otherwise, all unique URLs will be indexed\n * (e.g. <code>![foo][image0]</code>) and the references will be output at the very end.\n *\n * @public\n * @extends {Plugin}\n */\nclass ImagePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.skipChildren = context.get('previousSkipChildren')\n  }\n\n  /**\n   * @override\n   */\n  afterAll(transformation) {\n    if (!this._images.length) {\n      return\n    }\n\n    transformation.append('\\n\\n')\n\n    for (let i = 0; i < this._images.length; i++) {\n      transformation.append(`[image${i}]: ${this._images[i]}\\n`)\n    }\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousSkipChildren', transformation.skipChildren)\n  }\n\n  /**\n   * @override\n   */\n  beforeAll(transformation) {\n    /**\n     * The image values (which will contain the HREF) mapped to their index.\n     *\n     * This is only used when the <code>inline</code> option is enabled.\n     *\n     * @private\n     * @type {Map<string, number>}\n     */\n    this._imageMap = new Map()\n\n    /**\n     * The indexed image values.\n     *\n     * This is only used when the <code>inline</code> option is enabled.\n     *\n     * @private\n     * @type {string[]}\n     */\n    this._images = []\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.skipChildren = true\n\n    const { element, options } = transformation\n    const source = options.absolute ? element.src : element.getAttribute('src')\n    if (!source) {\n      return\n    }\n\n    const alternativeText = element.getAttribute('alt') || ''\n    const title = element.getAttribute('title')\n    let value = title ? `${source} \"${title}\"` : source\n\n    if (options.inline) {\n      value = `(${value})`\n    } else {\n      let index = this._imageMap.get(value)\n      if (index == null) {\n        index = this._images.push(value) - 1\n\n        this._imageMap.set(value, index)\n      }\n\n      value = `[image${index}]`\n    }\n\n    transformation.output(`![${alternativeText}]${value}`)\n  }\n\n}\n\nexport default ImagePlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Contains utility methods that are useful throughout the library.\n *\n * @public\n */\nclass Utilities {\n\n  /**\n   * Left pads the <code>string</code> provided with the given padding string for the specified number of\n   * <code>times</code>.\n   *\n   * @param {string} [string=\"\"] - the string to be padded\n   * @param {number} [times=0] - the number of times to pad <code>string</code>\n   * @param {string} [padding=\" \"] - the padding string\n   * @return {string} The padded <code>string</code>.\n   * @public\n   * @static\n   */\n  static leftPad(string = '', times = 0, padding = ' ') {\n    if (!padding) {\n      return string\n    }\n\n    for (let i = 0; i < times; i++) {\n      string = padding + string\n    }\n\n    return string\n  }\n\n  /**\n   * Throws an error indicating that the a given method on a specific class has not been implemented.\n   *\n   * @param {string} className - the name of the class on which the method has not been implemented\n   * @param {string} methodName - the name of the method which has not been implemented\n   * @return {void}\n   * @throws {Error} The error describing the class method which has not been implemented.\n   * @public\n   * @static\n   */\n  static throwUnimplemented(className, methodName) {\n    throw new Error(`\"${methodName}\" method must be implemented on the ${className} class`)\n  }\n\n}\n\nexport default Utilities\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\nimport Utilities from '../../utilities'\n\n/**\n * A {@link Plugin} which outputs a list item. The prefix for the list item will vary depending on what type of list the\n * item is contained within.\n *\n * @public\n * @extends {Plugin}\n */\nclass ListItemPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const value = transformation.inOrderedList ? `${transformation.listIndex++}. ` : '* '\n\n    if (!transformation.atLeft) {\n      transformation.append(transformation.left.replace(/[ ]{2,4}$/, '\\n'))\n\n      transformation.atLeft = true\n      transformation.atNoWhiteSpace = true\n      transformation.atParagraph = true\n    } else if (transformation.last) {\n      transformation.last = transformation.last.replace(/[ ]{2,4}$/, '\\n')\n    }\n\n    transformation.append(Utilities.leftPad(value, (transformation.listDepth - 1) * 2))\n  }\n\n}\n\nexport default ListItemPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs an ordered list.\n *\n * @public\n * @extends {Plugin}\n */\nclass OrderedListPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.inOrderedList = context.get('previousInOrderedList')\n    transformation.listIndex = context.get('previousListIndex')\n    transformation.listDepth--\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousInOrderedList', transformation.inOrderedList)\n    context.set('previousListIndex', transformation.listIndex)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    if (transformation.listDepth === 0) {\n      transformation.appendParagraph()\n    }\n\n    transformation.inOrderedList = true\n    transformation.listIndex = 1\n    transformation.listDepth++\n  }\n\n}\n\nexport default OrderedListPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs a paragraph.\n *\n * @public\n * @extends {Plugin}\n */\nclass ParagraphPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.appendParagraph()\n  }\n\n}\n\nexport default ParagraphPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs the contents in a preformatted block.\n *\n * @public\n * @extends {Plugin}\n */\nclass PreformattedPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.atLeft = false\n    transformation.atParagraph = false\n    transformation.inPreformattedBlock = context.get('previousInPreformattedBlock')\n    transformation.left = context.get('previousLeft')\n\n    transformation.appendParagraph()\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousInPreformattedBlock', transformation.inPreformattedBlock)\n    context.set('previousLeft', transformation.left)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    const value = '    '\n\n    transformation.left += value\n\n    if (transformation.atParagraph) {\n      transformation.append(value)\n    } else {\n      transformation.appendParagraph()\n    }\n  }\n\n}\n\nexport default PreformattedPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * A preset of plugins usually grouped for a specific purpose.\n *\n * @public\n */\nclass Preset {\n\n  /**\n   * Creates an instance of {@link Preset}.\n   *\n   * @public\n   */\n  constructor() {\n    /**\n     * The plugins for this {@link Preset}.\n     *\n     * @private\n     * @type {Map<string[], Plugin>}\n     */\n    this._plugins = new Map()\n  }\n\n  /**\n   * Sets the specified <code>plugin</code> for the <code>tags</code> provided.\n   *\n   * @param {string[]} tags - the tag names to which <code>plugin</code> will be registered\n   * @param {Plugin} plugin - the {@link Plugin} to be registered against <code>tags</code>\n   * @return {Preset} A reference to this {@link Preset} for chaining purposes.\n   * @public\n   */\n  set(tags, plugin) {\n    this._plugins.set(tags, plugin)\n\n    return this\n  }\n\n  /**\n   * Sets all of the specified <code>plugins</code> to be registered against their mapped tag names.\n   *\n   * @param {Map<string[], Plugin>} plugins - a <code>Map</code> of plugins and tag names to which they are\n   * to be registered\n   * @return {Preset} A reference to this {@link Preset} for chaining purposes.\n   * @public\n   */\n  setAll(plugins) {\n    for (const [ tags, plugin ] of plugins) {\n      this._plugins.set(tags, plugin)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns the plugins for this {@link Preset}.\n   *\n   * @return {Map<string[], Plugin>} The plugins.\n   * @public\n   */\n  get plugins() {\n    return new Map(this._plugins)\n  }\n\n}\n\nexport default Preset\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs as quoted text.\n *\n * @public\n * @extends {Plugin}\n */\nclass QuotePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.output('\"')\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    transformation.output('\"')\n\n    transformation.atNoWhiteSpace = true\n  }\n\n}\n\nexport default QuotePlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Plugin from '../plugin'\n\n/**\n * A {@link Plugin} which outputs an unordered list.\n *\n * @public\n * @extends {Plugin}\n */\nclass UnorderedListPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(transformation, context) {\n    transformation.inOrderedList = context.get('previousInOrderedList')\n    transformation.listIndex = context.get('previousListIndex')\n    transformation.listDepth--\n  }\n\n  /**\n   * @override\n   */\n  before(transformation, context) {\n    context.set('previousInOrderedList', transformation.inOrderedList)\n    context.set('previousListIndex', transformation.listIndex)\n  }\n\n  /**\n   * @override\n   */\n  transform(transformation, context) {\n    if (transformation.listDepth === 0) {\n      transformation.appendParagraph()\n    }\n\n    transformation.inOrderedList = false\n    transformation.listIndex = 1\n    transformation.listDepth++\n  }\n\n}\n\nexport default UnorderedListPlugin\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport AnchorPlugin from '../predefined/anchor'\nimport BlockQuotePlugin from '../predefined/block-quote'\nimport BreakPlugin from '../predefined/break'\nimport CodePlugin from '../predefined/code'\nimport DefinitionTermPlugin from '../predefined/definition-term'\nimport DetailsPlugin from '../predefined/details'\nimport EmphasisPlugin from '../predefined/emphasis'\nimport EmptyPlugin from '../predefined/empty'\nimport HeadingPlugin from '../predefined/heading'\nimport HorizontalRulePlugin from '../predefined/horizontal-rule'\nimport ImagePlugin from '../predefined/image'\nimport ListItemPlugin from '../predefined/list-item'\nimport OrderedListPlugin from '../predefined/ordered-list'\nimport ParagraphPlugin from '../predefined/paragraph'\nimport PreformattedPlugin from '../predefined/preformatted'\nimport Preset from './preset'\nimport QuotePlugin from '../predefined/quote'\nimport StrongPlugin from '../predefined/strong'\nimport UnorderedListPlugin from '../predefined/unordered-list'\n\nexport default new Preset()\n  .set([ 'a' ], new AnchorPlugin())\n  .set([\n    'blockquote',\n    'dd'\n  ], new BlockQuotePlugin())\n  .set([ 'br' ], new BreakPlugin())\n  .set([\n    'code',\n    'kbd',\n    'samp'\n  ], new CodePlugin())\n  .set([ 'dt' ], new DefinitionTermPlugin())\n  .set([ 'details' ], new DetailsPlugin())\n  .set([\n    'cite',\n    'dfn',\n    'em',\n    'i',\n    'u',\n    'var'\n  ], new EmphasisPlugin())\n  .set([\n    'applet',\n    'area',\n    'audio',\n    'button',\n    'canvas',\n    'datalist',\n    'embed',\n    'head',\n    'input',\n    'map',\n    'menu',\n    'meter',\n    'noframes',\n    'noscript',\n    'object',\n    'optgroup',\n    'option',\n    'param',\n    'progress',\n    'rp',\n    'rt',\n    'ruby',\n    'script',\n    'select',\n    'style',\n    'textarea',\n    'title',\n    'video'\n  ], new EmptyPlugin())\n  .set([\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6'\n  ], new HeadingPlugin())\n  .set([ 'hr' ], new HorizontalRulePlugin())\n  .set([ 'img' ], new ImagePlugin())\n  .set([ 'li' ], new ListItemPlugin())\n  .set([ 'ol' ], new OrderedListPlugin())\n  .set([\n    'address',\n    'article',\n    'aside',\n    'div',\n    'fieldset',\n    'footer',\n    'header',\n    'nav',\n    'p',\n    'section'\n  ], new ParagraphPlugin())\n  .set([ 'pre' ], new PreformattedPlugin())\n  .set([ 'q' ], new QuotePlugin())\n  .set([\n    'b',\n    'strong'\n  ], new StrongPlugin())\n  .set([ 'ul' ], new UnorderedListPlugin())\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport Transformer from './transformer'\nimport defaultPreset from './plugin/preset/default'\n\n/**\n * An HTML to Markdown transformation library that supports HTML strings and DOM elements.\n *\n * @public\n */\nclass Europa {\n\n  /**\n   * Creates an instance of {@link Europa} using the window service provided.\n   *\n   * @param {WindowService} windowService - the {@link WindowService} to be used for HTML to Markdown transformation\n   * @public\n   */\n  constructor(windowService) {\n    /**\n     * The {@link WindowService} for this {@link Europa} instance.\n     *\n     * @private\n     * @type {WindowService}\n     */\n    this._windowService = windowService\n\n    /**\n     * The <code>Window</code> to be used for HTML to Markdown transformation.\n     *\n     * @private\n     * @type {Window}\n     */\n    this._window = null\n\n    /**\n     * The plugins for this {@link Europa} instance.\n     *\n     * @private\n     * @type {Map<string, Plugin>}\n     */\n    this._plugins = new Map()\n\n    this.registerPreset(defaultPreset)\n  }\n\n  /**\n   * Destroys the <code>Window</code> used by this {@link Europa} instance.\n   *\n   * This allows closeable {@link WindowService} implementations to close the <code>Window</code> and free up resources.\n   * However, this instance can and will simply retrieve another <code>Window</code> from the {@link WindowService} the\n   * next time it is required.\n   *\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   */\n  destroy() {\n    if (this._window) {\n      this._windowService.closeWindow(this._window)\n      this._window = null\n    }\n\n    return this\n  }\n\n  /**\n   * Registers the specified <code>plugin</code> for the <code>tags</code> provided.\n   *\n   * <code>tags</code> can be an array of tag names or a single string containing white-space separated tag names.\n   *\n   * @param {string|string[]} tags - the tag names for which <code>plugin</code> is to be registered\n   * @param {Plugin} plugin - the {@link Plugin} to be registered\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   */\n  register(tags, plugin) {\n    if (typeof tags === 'string') {\n      tags = tags.trim().split(/\\s+/)\n    }\n\n    for (const tag of tags) {\n      this._plugins.set(tag.toLowerCase(), plugin)\n    }\n\n    return this\n  }\n\n  /**\n   * Registers all of the plugins within the specified <code>preset</code>.\n   *\n   * @param {Preset} preset - the {@link Preset} whose plugins are to be registered\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   */\n  registerPreset(preset) {\n    for (const [ tags, plugin ] of preset.plugins) {\n      this.register(tags, plugin)\n    }\n\n    return this\n  }\n\n  /**\n   * Transforms the specified <code>html</code> into Markdown using the <code>options</code> provided.\n   *\n   * <code>html</code> can either be an HTML string or a DOM element whose HTML contents are to be transformed into\n   * Markdown.\n   *\n   * @param {Element|string} html - the HTML (or element whose inner HTML) to be transformed into Markdown\n   * @param {Transformation~Options} [options] - the options to be used\n   * @return {string} The transformed Markdown.\n   * @public\n   */\n  transform(html, options) {\n    const { window } = this\n    const transformer = new Transformer(window, this._plugins)\n\n    options = this._createTransformationOptions(options)\n\n    return transformer.transform(html, options)\n  }\n\n  /**\n   * Creates the options, including their default values, for the {@link Transformer#transform} method based on the\n   * <code>options</code> provided.\n   *\n   * @param {Transformation~Options} [options] - the options that were passed in\n   * @return {Transformation~Options} The complete options.\n   * @private\n   */\n  _createTransformationOptions(options) {\n    return Object.assign({\n      absolute: false,\n      baseUri: this._windowService.getBaseUri(this.window),\n      inline: false\n    }, options)\n  }\n\n  /**\n   * Returns the <code>Window</code> for this {@link Europa} instance.\n   *\n   * If no <code>Window</code> has been allocated, one is retrieved from the {@link WindowService} and allocated.\n   *\n   * @return {Window} The <code>Window</code>.\n   * @public\n   */\n  get window() {\n    if (this._window == null) {\n      this._window = this._windowService.getWindow()\n    }\n\n    return this._window\n  }\n\n}\n\nexport default Europa\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport Europa from './europa'\n\nexport default Europa\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nimport Utilities from '../utilities'\n\n/**\n * A service used to retrieve the <code>Window</code> object for transforming HTML to Markdown and, optionally, to close\n * it upon destruction of the {@link Europa} instance. This can be useful to free up resources as/when required in an\n * artificial browser environment.\n *\n * @public\n */\nclass WindowService {\n\n  /**\n   * Closes the specified <code>window</code> but only if this {@link WindowService} is closeable.\n   *\n   * @param {Window} window - the <code>Window</code> to be closed\n   * @return {void}\n   * @public\n   */\n  closeWindow(window) {\n    if (this.isCloseable(window)) {\n      window.close()\n    }\n  }\n\n  /**\n   * Returns the base URI for the specified <code>window</code>.\n   *\n   * Implementations <b>must</b> override this method.\n   *\n   * @param {Window} window - the <code>Window</code> for which the base URI is to be returned\n   * @return {string} The base URI for <code>window</code>.\n   * @public\n   * @abstract\n   */\n  getBaseUri(window) {\n    Utilities.throwUnimplemented('WindowService', 'getBaseUri')\n  }\n\n  /**\n   * Returns a <code>Window</code> to be used for transforming HTML to Markdown.\n   *\n   * Implementations <b>must</b> override this method.\n   *\n   * @return {Window} The <code>Window</code>.\n   * @public\n   * @abstract\n   */\n  getWindow() {\n    Utilities.throwUnimplemented('WindowService', 'getWindow')\n  }\n\n  /**\n   * Returns whether the specified <code>window</code> which was retrieved by this {@link WindowService} is closeable.\n   *\n   * @param {Window} window - the <code>Window</code> to be checked\n   * @return {boolean} <code>true</code> if <code>window</code> is closeable; otherwise <code>false</code>.\n   * @public\n   */\n  isCloseable(window) {\n    return false\n  }\n\n}\n\nexport default WindowService\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport WindowService from 'europa-core/src/service/window-service'\n\n/**\n * A very simplistic implementation of {@link WindowService} that returns the global <code>Window</code> object to be\n * used for transforming HTML into Markdown.\n *\n * @public\n * @extends {WindowService}\n */\nclass NativeWindowService extends WindowService {\n\n  /**\n   * @override\n   */\n  getBaseUri(window) {\n    return window.document.baseURI\n  }\n\n  /**\n   * @override\n   */\n  getWindow() {\n    return window\n  }\n\n}\n\nexport default NativeWindowService\n","/*\n * Copyright (C) 2016 Alasdair Mercer, Skelp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport Europa from 'europa-core'\n\nimport NativeWindowService from './service/native-window-service'\n\nexport default new Europa(new NativeWindowService())\n"],"names":["Transformation","transformer","options","atLeft","atNoWhiteSpace","atParagraph","buffer","inCodeBlock","inOrderedList","inPreformattedBlock","last","left","listDepth","listIndex","pluginStack","skipChildren","_document","document","_element","_tagName","_window","window","string","append","clean","replace","Object","entries","REPLACEMENTS","key","expression","REPLACEMENTS_REGEXP","test","value","tagName","toLowerCase","keys","RegExp","Transformer","plugins","_plugins","html","root","createElement","innerHTML","transformation","values","plugin","beforeAll","transformElement","afterAll","trim","element","_isVisible","nodeType","Node","ELEMENT_NODE","context","Map","get","push","before","transform","Array","from","childNodes","child","after","pop","TEXT_NODE","nodeValue","output","style","getComputedStyle","getPropertyValue","Plugin","AnchorPlugin","has","_anchors","length","i","_anchorMap","href","absolute","getAttribute","title","inline","set","index","BlockQuotePlugin","appendParagraph","BreakPlugin","CodePlugin","StrongPlugin","DefinitionTermPlugin","DetailsPlugin","hasAttribute","summary","querySelector","EmphasisPlugin","EmptyPlugin","HeadingPlugin","level","parseInt","match","heading","HorizontalRulePlugin","ImagePlugin","_images","_imageMap","source","src","alternativeText","Utilities","times","padding","className","methodName","Error","ListItemPlugin","leftPad","OrderedListPlugin","ParagraphPlugin","PreformattedPlugin","Preset","tags","QuotePlugin","UnorderedListPlugin","Europa","windowService","_windowService","registerPreset","defaultPreset","closeWindow","split","tag","preset","register","_createTransformationOptions","assign","baseUri","getBaseUri","getWindow","WindowService","isCloseable","close","throwUnimplemented","NativeWindowService","baseURI"],"mappings":"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"}